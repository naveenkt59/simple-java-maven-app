def access_key
def secret_key



pipeline {
    agent {label 'OPA-TCS'}
      environment {
     M2_HOME = '/home/ec2-user/maven/apache-maven-3.6.3/'
      PATH = "${env.M2_HOME}/bin:/home/ec2-user/sonar-runner/sonar-runner-2.4/bin:${env.PATH}"
     
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Unit Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Code Analysis') {
            steps {
                script {
                sh 'sudo sonar-runner -Dsonar.host.url=http://localhost:9000 -Dsonar.projectKey=web_app -Dsonar.java.binaries=target/classes'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
        stage('Nexus') {
        steps {
            script {
                def pom = readMavenPom file: 'pom.xml'
                echo pom.version

                nexusArtifactUploader(
                        nexusVersion: 'nexus2',
                        protocol: 'http',
                        nexusUrl: 'localhost:8081/nexus',
                        groupId: 'java-grp',
                        version: "${BUILD_NUMBER}",
                        repository: 'java-repo',
                        credentialsId: 'nexus_cred',
                        artifacts: [
                            [artifactId: 'java_jar',
                            file: 'target/my-app-1.0-SNAPSHOT.jar',
                            type: 'jar']
                        ]
                )
            }
        }
    }

      stage('Deploy') {
           environment {
                AWS_ACCESS_KEY_ID = "$AWS_ACCESS_KEY_ID"
                AWS_SECRET_ACCESS_KEY = "$AWS_SECRET_ACCESS_KEY"
            }
            steps {
               withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'aws_devops', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
             sh 'echo $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY'
             sh 'echo $AWS_SECRET_ACCESS_KEY'
             sh 'export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID'
             sh 'export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY'
             sh 'export AWS_REGION="eu-central-1"'
            
            dir("jenkins/infra/src/terraform/") {
                sh 'make destroy'
                sh 'make plan'
                sh 'make apply'
            }
}
            }
            }

     stage('Testing'){
         steps{
            checkout([
			$class: 'GitSCM', branches: [[name: '*/master']],
			extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'selenium_scripts']],
			userRemoteConfigs: [[url: 'https://github.com/naveenkt59/google.git',
			credentialsId:'']]
			 ])   
            dir("selenium_scripts/") {
                sh 'mvn clean test -P chrome'
            }
         }                


     }
    }
}
